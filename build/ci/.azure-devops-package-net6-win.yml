parameters:
  poolName: ''

jobs:
- job: net6_win_build
  displayName: 'Build .NET 6 Build (Windows)'
  timeoutInMinutes: 90

  pool: ${{ parameters.poolName }}

  strategy:
    matrix:
      UWP:
        UNO_UWP_BUILD: true
        XAML_FLAVOR_BUILD: UWP 

      WinUI:
        UNO_UWP_BUILD: false
        XAML_FLAVOR_BUILD: WinUI 

  variables:
    CombinedConfiguration: Release|Any CPU
    CI_Build: true

    # Disable .NET 5 build on CI for package generation
    # Build validation is performed on other jobs
    UnoUIDisableNetCoreBuild: true

    # This is required to be able to use hard links as much as possible
    NUGET_PACKAGES: $(Agent.WorkFolder)\.nuget

    # net6 related
    DotNetVersion: 6.0.100-preview.4.21226.14
    MauiCheck.Version: 0.4.1
    DotNet.Cli.Telemetry.OptOut: true
    MauiCheck.Manifest: https://raw.githubusercontent.com/Redth/dotnet-maui-check/main/manifests/maui-dev.manifest.json

  steps:
  - checkout: self
    clean: true

  - template: templates/nuget-cache.yml
    parameters:
      nugetPackages: $(NUGET_PACKAGES)

  - template: templates/gitversion.yml

  ## Required until .NET 6 installs properly on Windows using UseDotnet
  - powershell: |
      $ProgressPreference = 'SilentlyContinue'
      Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile dotnet-install.ps1
      & .\dotnet-install.ps1 -Version $(DotNetVersion) -InstallDir "$env:ProgramFiles\dotnet\" -Verbose
      & dotnet --list-sdks
    displayName: install .NET $(DotNetVersion)
    errorActionPreference: stop

  - powershell: |
      & dotnet tool update --global redth.net.maui.check --version $(MauiCheck.Version) --add-source https://api.nuget.org/v3/index.json
      & maui-check --ci --non-interactive --fix --skip androidsdk --skip xcode --skip vswin --skip vsmac --manifest $(MauiCheck.Manifest)
    displayName: Install .NET 6 Workloads
    errorActionPreference: stop

  - template: templates/install-windows-sdk.yml

  - powershell: |
        cd $(build.sourcesdirectory)\src\Uno.WinUIRevert
        dotnet run "$(build.sourcesdirectory)"

    condition: and(succeeded(), eq(variables['UNO_UWP_BUILD'], 'false'))
    displayName: Convert source tree to WinUI 3 structure

  - powershell: |
        cp $(build.sourcesdirectory)\src\global-net6.json $(build.sourcesdirectory)\src\global.json
    displayName: Change active .NET SDK

  - task: MSBuild@1
    inputs:
      solution: Build/Uno.UI.Build.csproj
      msbuildLocationMethod: version
      msbuildVersion: latest
      msbuildArchitecture: x86
      msbuildArguments: /r /m /t:BuildNet6 "/p:CombinedConfiguration=$(CombinedConfiguration)" /detailedsummary /bl:$(build.artifactstagingdirectory)\build-$(GitVersion.FullSemVer)-net6-$(UNO_UWP_BUILD).binlog
      clean: false
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: DotNetCoreCLI@2
    inputs:
      workingDirectory: Build
      arguments: Uno.UI.Build.csproj /r /m /t:BuildCINet6 "/p:CombinedConfiguration=$(CombinedConfiguration)" /detailedsummary /bl:$(build.artifactstagingdirectory)\build-$(GitVersion.FullSemVer)-net6-$(UNO_UWP_BUILD).binlog

  - task: CopyFiles@2
    condition: always()
    inputs:
      SourceFolder: $(build.sourcesdirectory)
      Contents: |
        **/bin/**/*.dll
        **/bin/**/*.pdb
        **/bin/**/*.xml
        **/bin/**/*.xbf
        **/bin/**/*.xaml
      TargetFolder: $(build.sourcesdirectory)\build-artifacts\bin-$(XAML_FLAVOR_BUILD)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(build.sourcesdirectory)\build-artifacts\bin-$(XAML_FLAVOR_BUILD)
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/windows-net6-bin-$(XAML_FLAVOR_BUILD).zip'

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: NugetPackages-Artifacts
      ArtifactType: Container
